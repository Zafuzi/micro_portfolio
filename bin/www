#!/usr/bin/env node

var app = require('../index');
var http = require('http');

var port = normalizePort( process.env.PORT || '3000' );

var server = http.createServer(app);

server.listen(port);
server.on('error', fail);
server.on('listening', okay);

function normalizePort(val) {
	var port = parseInt(val, 10);

	if (isNaN(port)) {
		// named pipe
		return val;
	}

	if (port >= 0) {
		// port number
		return port;
	}


	return false;
}

function fail(error) {
	if (error.syscall !== 'listen') {
		throw error;
	}

	var bind = typeof port === 'string'
		? 'Pipe ' + port
		: 'Port ' + port;

	// handle specific listen errors with friendly messages
	switch (error.code) {
		case 'EACCES':
			console.error(bind + ' requires elevated privileges');
			process.exit(1);
			break;
		case 'EADDRINUSE':
			console.error(bind + ' is already in use');
			process.exit(1);
			break;
		default:
			throw error;
	}
}

/**
* Event listener for HTTP server "listening" event.
*/

function okay() {
	var addr = server.address();
	var bind = typeof addr === 'string'
		? 'pipe ' + addr
		: 'port ' + addr.port;

	for (let line of startupMessage.split("\n")) {
		console.log(line);
	}

	console.log('Server listening on ' + bind + ' ðŸš€');
}

const startupMessage = "zafuzi's incredible micro server";
